rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/ {user} {
      allow get: if true;
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if true;
      allow update: if request.auth != null && (request.auth.uid == request.resource.data.id || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

      match /addresses/ {adr} {
            allow read: if request.auth != null;
            allow create: if request.auth != null;
            allow update: if request.auth != null;
            allow delete: if request.auth != null;
        }
    }

    match /stock/ {stk} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'client';
      allow update: if request.auth != null;
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'client';
    }

    match /statisticUser/ {statUser} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'client';
      allow create: if request.auth != null;
       allow update: if request.auth != null;
      allow delete: if false;
    }

    match /statisticStock/ {statStock} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'client';
      allow create: if request.auth != null;
       allow update: if request.auth != null
      allow delete: if false;
    }

    match /statistic/ {stat} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role != 'client';
      allow create: if request.auth != null;
       allow update: if request.auth != null;
      allow delete: if false;
    }

    match /order/ {odr} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;

      match /items/ {itm} {
            allow read: if request.auth != null;
            allow create: if request.auth != null;
            allow update: if request.auth != null;
            allow delete: if request.auth != null;
        }
    }

    match /menu/ {item} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

     match /configuration/ {doc} {
      allow read: if true;
      allow create: if false;
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if false;
    }

    match /category/ {cat} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /calls/ {call} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
    
  }
}
